plugins {
    id 'fabric-loom' version '1.2-SNAPSHOT'
    id "io.github.juuxel.loom-vineflower" version "${loom_vineflower_version}"
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

def wynntils = {
    var url = "https://github.com/Wynntils/Artemis/releases/download/v${artemis_version}/wynntils-${artemis_version}-fabric+MC-${minecraft_version}.jar"
    var name = "wynntils-${artemis_version}"

    File file = new File("$projectDir/libs/artemis/${name}.jar")
    file.parentFile.mkdirs()
    if (!file.exists()) {
        new URL(url).withInputStream { downloadStream ->
            file.withOutputStream { fileOut ->
                fileOut << downloadStream
            }
        }

        File modsFile = new File("$projectDir/run/mods/wynntils.jar");
        modsFile.parentFile.mkdirs();

        var os = new FileInputStream(file);

        modsFile.withOutputStream { fileOut ->
            fileOut << os
        }
    }

    files(file.absolutePath)
}

loom {
    accessWidenerPath = file("src/main/resources/fuy_gg.accesswidener")
}

repositories {
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }

    maven { url 'https://jitpack.io' }
    maven { url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1" }

    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/releases/" }

    flatDir {
        dirs "./libs/acf"
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${minecraft_version}"

    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_mappings}@zip")
    }

    implementation "org.reflections:reflections:0.10.2"
    implementation "org.java-websocket:Java-WebSocket:1.5.4"


    modApi("me.shedaniel.cloth:cloth-config-fabric:10.1.105") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modApi "com.terraformersmc:modmenu:6.2.1"

    modImplementation "net.fabricmc:fabric-loader:${loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation files("libs/acf/acf-fabric-${acf_fabric_version}.jar")
    implementation files("libs/acf/ACF-${acf_version}.jar")

    modCompileOnly wynntils()

    include "org.reflections:reflections:0.10.2"
    include "org.javassist:javassist:3.29.2-GA"
    include "org.java-websocket:Java-WebSocket:1.5.4"


    include name: "acf-fabric-${acf_fabric_version}"
//    include files("$projectDir/libs/acf/acf-fabric-${acf_version}.jar", "$projectDir/libs/acf/ACF-${acf_version}.jar")

    modRuntimeOnly "me.djtheredstoner:DevAuth-fabric:${devauth_version}"
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version,
                "artemis_version": project.artemis_version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
